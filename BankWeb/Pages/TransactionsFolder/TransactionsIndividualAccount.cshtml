@page
@model TransactionsIndividualAccountModel
@{
    ViewData["Title"] = "Transactions for Account " + Model.AccountId;
}


<div class="page-heading header-text">
    <h1>@ViewData["Title"]</h1>
    <h2>Current Balance: @Model.Balance</h2>
    <button id="update-profile-button" type="button" class="btn btn-primary mt-3" onclick="window.history.back();">
        <i class="fa-solid fa-arrow-left mr-2"></i>Return
    </button>
</div>


<table class="table container table-hover">
    <thead>
        <tr>
            <th>Transaction ID</th>
            <th class="d-none d-sm-table-cell">Date</th>
            <th class="d-none d-sm-table-cell">Type</th>
            <th class="d-none d-sm-table-cell">Operation</th>
            <th>Amount</th>
            <th>Balance</th>
        </tr>
    </thead>
    <tbody id="transactionTable">
        @foreach (var transaction in Model.Transactions)
        {
            <tr>
                <td>
                    <a asp-page="/TransactionsFolder/TransactionDetails" asp-route-transactionId="@transaction.TransactionId" id="update-profile-button" class="btn btn-primary">
                        <i class="fa-solid fa-eye mr-2"></i>@transaction.TransactionId
                    </a>
                </td>
                <td class="d-none d-sm-table-cell">@transaction.DateOfTransaction</td>
                <td class="d-none d-sm-table-cell">@transaction.Type</td>
                <td class="d-none d-sm-table-cell">@transaction.Operation</td>
                <td>SEK: @transaction.Amount</td>
                <td>SEK: @transaction.Balance</td>
            </tr>
        }
    </tbody>
</table>

<div style="text-align: center">
    <button id="loadMoreButton" class="btn btn-primary update-profile-button mb-3">
        <i class="fa-solid fa-arrows-rotate mr-2"></i>Load More
    </button>
</div>

@section Scripts {
    <script>
        var page = 1;
        var accountId = @Model.AccountId;
        var loadedTransactionIds = new Set();
        var loadMoreButton = document.getElementById('loadMoreButton');
        var warningText = document.createElement('p');
        warningText.innerText = 'No more transactions to load.';
        warningText.style.display = 'none';
        warningText.style.color = 'red';
        loadMoreButton.parentNode.appendChild(warningText);

        function loadMoreTransactions() {
            var lastTransactionDate = document.querySelector('#transactionTable tr:last-child td:nth-child(2)').innerText;
            fetch(`/TransactionsFolder/TransactionsIndividualAccount?handler=LoadMoreTransactions&accountId=${accountId}&lastFetchedTransactionTimestamp=${lastTransactionDate}&loadedTransactionIds=${Array.from(loadedTransactionIds).join(',')}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Server error: ' + response.status);
                    }
                    return response.json();
                })
                .then(data => {
                    var table = document.getElementById('transactionTable');
                    data.transactions.forEach(transaction => {
                        loadedTransactionIds.add(transaction.transactionId);
                        var row = table.insertRow(-1);
                        var cell = row.insertCell(0);
                        var link = document.createElement('a');
                        link.href = '/TransactionsFolder/TransactionDetails?transactionId=' + transaction.transactionId;

                        var icon = document.createElement('i');
                        icon.className = 'fa-solid fa-eye mr-2';
                        link.appendChild(icon);

                        var textNode = document.createTextNode(transaction.transactionId);
                        link.appendChild(textNode);

                        link.id = 'update-profile-button';
                        link.className = 'btn btn-primary';
                        cell.appendChild(link);
                        var dateCell = row.insertCell(1);
                        dateCell.innerText = transaction.dateOfTransaction;
                        dateCell.className = 'd-none d-sm-table-cell';
                        var typeCell = row.insertCell(2);
                        typeCell.innerText = transaction.type;
                        typeCell.className = 'd-none d-sm-table-cell';
                        var operationCell = row.insertCell(3);
                        operationCell.innerText = transaction.operation;
                        operationCell.className = 'd-none d-sm-table-cell';
                        row.insertCell(4).innerText = 'SEK: ' + transaction.amount;
                        row.insertCell(5).innerText = 'SEK: ' + transaction.balance;
                    });


                    if (!data.hasMore) {
                        loadMoreButton.disabled = true;
                        warningText.style.display = 'block';
                    }
                })
                .catch(error => console.error('Fetch error:', error));
        }

        loadMoreButton.addEventListener('click', function () {
            page++;
            loadMoreTransactions();
        });

        loadMoreTransactions();
    </script>
}



